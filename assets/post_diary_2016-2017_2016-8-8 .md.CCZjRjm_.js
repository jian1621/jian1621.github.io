import{_ as r,c as a,o as t,ag as o}from"./chunks/framework.BVgKs9HZ.js";const f=JSON.parse('{"title":"android的开源库","description":"介绍了android开发中所常引用的网络库和图片缓存库，并附整理的所有安卓库的文件下载链接地址","frontmatter":{"title":"android的开源库","date":"2016-08-08T19:58:50.000Z","tags":["学习"],"description":"介绍了android开发中所常引用的网络库和图片缓存库，并附整理的所有安卓库的文件下载链接地址"},"headers":[],"relativePath":"post/diary/2016-2017/2016-8-8 .md","filePath":"post/diary/2016-2017/2016-8-8 .md"}'),l={name:"post/diary/2016-2017/2016-8-8 .md"};function n(i,e,h,s,c,p){return t(),a("div",null,e[0]||(e[0]=[o('<h3 id="网络通信协议" tabindex="-1">网络通信协议： <a class="header-anchor" href="#网络通信协议" aria-label="Permalink to &quot;网络通信协议：&quot;">​</a></h3><h4 id="android-async-http框架" tabindex="-1">android-async-http框架 <a class="header-anchor" href="#android-async-http框架" aria-label="Permalink to &quot;android-async-http框架&quot;">​</a></h4><p><a href="https://github.com/loopj/android-async-http" target="_blank" rel="noreferrer">Github地址</a><a href="http://www.cnblogs.com/clear5/p/4564072.html" target="_blank" rel="noreferrer">示例1</a><a href="http://www.cnblogs.com/clear5/p/4568421.html" target="_blank" rel="noreferrer">示例2</a> 优劣：android-async-http内部实现是基于HttpClient, 想必你肯定知道6.0之后HttpClient是不是系统自带的了，不过它在最近的更新中将HttpClient的所有代码copy了一份进来，所以还能使用。</p><h4 id="volley" tabindex="-1">Volley <a class="header-anchor" href="#volley" aria-label="Permalink to &quot;Volley&quot;">​</a></h4><p><a href="https://github.com/wangzhengyi/Volley" target="_blank" rel="noreferrer">源码解析</a><a href="http://www.cnblogs.com/caichongyang/p/4399790.html" target="_blank" rel="noreferrer">详解1</a><a href="http://blog.csdn.net/ttdevs/article/details/17566795" target="_blank" rel="noreferrer">详解2</a><a href="http://blog.csdn.net/column/details/xyzlmnnetdev.html" target="_blank" rel="noreferrer">详解3</a> 优劣：Volley是官方出的，volley在设计的时候是将具体的请求客户端做了下封装：HurlStack，也就是说可以支持HttpUrlConnection, HttpClient, OkHttp，相当于模版模式吧，这样解耦还是非常方便的，可以随意切换，如果你之前使用过Volley，并习惯使用，那直接写个OkHttp扩展就行了。 <em>推荐使用</em></p><h4 id="okhttp" tabindex="-1">OkHttp <a class="header-anchor" href="#okhttp" aria-label="Permalink to &quot;OkHttp&quot;">​</a></h4><p><a href="https://github.com/square/okhttp" target="_blank" rel="noreferrer">Github地址</a><a href="http://www.jianshu.com/p/19593f254cd9" target="_blank" rel="noreferrer">详解1</a><a href="http://www.cnblogs.com/qifengshi/p/5405550.html" target="_blank" rel="noreferrer">详解2</a><a href="http://www.cnblogs.com/whoislcj/p/5526431.html" target="_blank" rel="noreferrer">详解3</a> 优劣：OkHttp 是基于http协议封装的一套请求客户端，虽然它也可以开线程，但根本上它更偏向真正的请求，跟HttpClient, HttpUrlConnection的职责是一样的。</p><h4 id="retrofit" tabindex="-1">Retrofit <a class="header-anchor" href="#retrofit" aria-label="Permalink to &quot;Retrofit&quot;">​</a></h4><p><a href="http://square.github.io/retrofit/" target="_blank" rel="noreferrer">Github</a><a href="http://www.tuicool.com/articles/NnuIva" target="_blank" rel="noreferrer">详解1</a><a href="http://www.cnblogs.com/vir56k/p/5633001.html" target="_blank" rel="noreferrer">示例1</a><a href="https://futurestud.io/blog/android-basic-authentication-with-retrofit" target="_blank" rel="noreferrer">英文版</a><em>推荐使用</em></p><h4 id="robospice" tabindex="-1">Robospice <a class="header-anchor" href="#robospice" aria-label="Permalink to &quot;Robospice&quot;">​</a></h4><p><a href="http://blog.csdn.net/sbsujjbcy/article/details/45070711" target="_blank" rel="noreferrer">介绍文章</a><em>未深入研究</em></p><blockquote><p>除了以上的各种网络协议库，android本身提供httpurlconnection和httpclient.在哈密扶贫的android版中就是使用最基本的httpurlconnection来和服务器端的selvert进行通信的，其优点是自由度高，哪儿出问题能定位到哪儿，缺点就是代码冗余，稳健性不高，需要考虑各种情况。 <a href="http://www.2cto.com/kf/201409/338915.html" target="_blank" rel="noreferrer">示例</a> 优劣：简单，但坑较多，需要手动异步，手动设置handler. <a href="http://www.tuicool.com/articles/Yjq6niQ" target="_blank" rel="noreferrer">不同的网络库的比较</a></p></blockquote><h3 id="图片缓存库" tabindex="-1">图片缓存库 <a class="header-anchor" href="#图片缓存库" aria-label="Permalink to &quot;图片缓存库&quot;">​</a></h3><p>图片加载最重要的就是不能oom,即内存溢出，如何在加载图片的时候可以加载到1000张，10000张而不崩溃，这是一个图片加载技术使用的门槛。有<a href="http://www.cnblogs.com/keanuyaoo/p/3290080.html" target="_blank" rel="noreferrer">示例</a>（未校验，作参考使用）</p><h4 id="picasso-可以实现图片下载和缓存功能。" tabindex="-1">Picasso: 可以实现图片下载和缓存功能。 <a class="header-anchor" href="#picasso-可以实现图片下载和缓存功能。" aria-label="Permalink to &quot;Picasso: 可以实现图片下载和缓存功能。&quot;">​</a></h4><p><a href="https://github.com/square/picasso" target="_blank" rel="noreferrer">github</a> 特点： • 自动完成Android APP的图片加载 • 处理图片回收以及取消下载操作 • 内存和磁盘自动缓存 <a href="http://www.cnblogs.com/puff/p/5124997.html" target="_blank" rel="noreferrer">介绍</a><a href="http://www.cnblogs.com/sihaixuan/p/4137304.html" target="_blank" rel="noreferrer">示例1</a><a href="http://www.jianshu.com/p/9b93737bfa88" target="_blank" rel="noreferrer">示例2</a></p><h4 id="glide-提供-多媒体文件的压缩-内存和磁盘缓存-资源池的接口。" tabindex="-1">Glide: 提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。 <a class="header-anchor" href="#glide-提供-多媒体文件的压缩-内存和磁盘缓存-资源池的接口。" aria-label="Permalink to &quot;Glide: 提供 多媒体文件的压缩,内存和磁盘缓存, 资源池的接口。&quot;">​</a></h4><p><a href="https://github.com/bumptech/glide" target="_blank" rel="noreferrer">Github</a> 它可以最大性能地在 Android 设备上读取、解码、显示图片和视频。Glide 可以将远程的图片、视频、动画图片等缓存在设备本地便于提高用户浏览图片的流畅体验。 <a href="http://www.cnblogs.com/zhaoyanjun/p/5404162.html" target="_blank" rel="noreferrer">示例</a> 特点： • GIF 动画的解码 • 本地视频剧照的解码 • 支持缩略图 • Activity 生命周期的集成 • 转码的支持 • 动画的支持 • OkHttp 和 Volley 的支持 优点： 图片缓存-&gt;媒体缓存 Glide 不仅是一个图片缓存，它支持 Gif、WebP、缩略图。甚至是 Video，所以更该当做一个媒体缓存。支持优先级处理与 Activity/Fragment 生命周期一致，支持 trimMemory Glide 对每个 context 都保持一个 RequestManager，通过 FragmentTransaction 保持与 Activity/Fragment 生命周期一致，并且有对应的 trimMemory 接口实现可供调用支持 okhttp、Volley Glide 默认通过 UrlConnection 获取数据，可以配合 okhttp 或是 Volley 使用。实际 ImageLoader、Picasso 也都支持 okhttp、Volley。内存友好. ① Glide 的内存缓存有个 active 的设计 从内存缓存中取数据时，不像一般的实现用 get，而是用 remove，再将这个缓存数据放到一个 value 为软引用的 activeResources map 中，并计数引用数，在图片加载完成后进行判断，如果引用计数为空则回收掉。 ② 内存缓存更小图片 Glide 以 url、view_width、view_height、屏幕的分辨率等做为联合 key，将处理后的图片缓存在内存缓存中，而不是原始图片以节省大小 ④ 图片默认使用默认 RGB_565 而不是 ARGB_888 虽然清晰度差些，但图片更小，也可配置到 ARGB_888。 Picasso所能实现的功能，Glide都能做，无非是所需的设置不同。但是Picasso体积比起Glide小太多如果项目中网络请求本身用的就是okhttp或者retrofit(本质还是okhttp)，那么建议用Picasso，体积会小很多(Square全家桶的干活)。Glide的好处是大型的图片流，比如gif、Video，如果你们是做美拍、爱拍这种视频类应用，建议使用。 Fresco在5.0以下的内存优化非常好，代价就是体积也非常的大，按体积算Fresco&gt;Glide&gt;Picasso 不过在使用起来也有些不便（小建议：他只能用内置的一个ImageView来实现这些功能，用起来比较麻烦，我们通常是根据Fresco自己改改，直接使用他的Bitmap层） <em>推荐使用</em></p><h4 id="universalimageloader" tabindex="-1">UniversalImageLoader <a class="header-anchor" href="#universalimageloader" aria-label="Permalink to &quot;UniversalImageLoader&quot;">​</a></h4><p><a href="http://www.cnblogs.com/lcw/p/3597574.html" target="_blank" rel="noreferrer">示例1</a><a href="http://www.cnblogs.com/avenwu/archive/2013/05/03/3058468.html" target="_blank" rel="noreferrer">示例2</a><a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="noreferrer">Github</a><a href="http://www.cnblogs.com/shaoke123/p/4685757.html" target="_blank" rel="noreferrer">解析1</a><a href="http://blog.csdn.net/xiaanming/article/details/26810303/" target="_blank" rel="noreferrer">示例3</a><a href="http://blog.csdn.net/vipzjyno1/article/details/23206387" target="_blank" rel="noreferrer">解析2</a><a href="http://www.mincoder.com/article/3800.shtml" target="_blank" rel="noreferrer">注意事项</a> • 支持多线程图片加载 • 提供丰富的细节配置，比如线程池大小，HTPP请求项，内存和磁盘缓存，图片显示时的参数配置等等； • 提供双缓存 • 支持加载过程的监听； • 提供图片的个性化显示配置接口； • Widget支持(这个，个人觉得没必要写进来，不过尊重原文)</p><h4 id="fresco" tabindex="-1">Fresco <a class="header-anchor" href="#fresco" aria-label="Permalink to &quot;Fresco&quot;">​</a></h4><p><a href="https://github.com/facebook/fresco" target="_blank" rel="noreferrer">Github</a><a href="http://www.fresco-cn.org/" target="_blank" rel="noreferrer">中文文档</a> • 在adapter中回收和取消当前的下载； • 使用最少的内存完成复杂的图形转换操作； • 图形转换操作，如变换大小，旋转等，提供了接口来让用户可以自定义转换操作； • 加载载网络或本地资源； • 可以转换为自己需要的request（Square公司开源的另一个网络支持库：retrofit支持转化json，protocol buffers）. • 最大的优势在于5.0以下(最低2.3)的bitmap加载。在5.0以下系统，Fresco将图片放到一个特别的内存区域(Ashmem区)。当然，在图片不显示的时候，占用的内存会自动被释放。这会使得APP更加流畅，减少因图片内存占用而引发的OOM。为什么说是5.0以下，因为在5.0以后系统默认就是存储在Ashmem区了。 <a href="http://www.jianshu.com/p/ec4961133192" target="_blank" rel="noreferrer">详解1</a><a href="http://www.jianshu.com/p/66e7fc907610" target="_blank" rel="noreferrer">详解2</a><a href="https://github.com/kaedea/fresco-sample-usage/blob/master/doc/readme-cn.md" target="_blank" rel="noreferrer">示例1</a><a href="http://www.cnblogs.com/wingyip/p/4508635.html" target="_blank" rel="noreferrer">详细解释</a></p><h4 id="各类图片加载库的比较" tabindex="-1">各类图片加载库的比较： <a class="header-anchor" href="#各类图片加载库的比较" aria-label="Permalink to &quot;各类图片加载库的比较：&quot;">​</a></h4><p><a href="http://www.jianshu.com/p/48311f567969" target="_blank" rel="noreferrer">比较1</a><a href="http://www.jianshu.com/p/9b93737bfa88" target="_blank" rel="noreferrer">比较22</a><a href="http://www.trinea.cn/android/android-image-cache-compare/" target="_blank" rel="noreferrer">Picasso glide fresco的不同</a><a href="http://stackoverflow.com/questions/29363321/picasso-v-s-imageloader-v-s-fresco-vs-glide" target="_blank" rel="noreferrer">下图为四种图片加载库的优劣</a></p><p><a href="http://www.liuxuanhua.cn/test/document/android-open-sources.doc" target="_blank" rel="noreferrer">android开源库整理文件(全)下载</a></p><h2 id="我总结了一下最近一个半月-结果如下-想健身-买了瑜伽垫-却没有坚持。想做android-下了eclipse-很久也没打开过。一直在学习bs-但还是一个回路都打不通。准备9月份的纪念视频-却过了一个月都没有动vegas-想着咨询哥哥户口的事情-却没动身。想着帮大姐咨询艺术老师的事情-却没去问。水管一直坏掉-两周了还没有给房东打电话。我这是怎么了-我这是病了吗-我一直在想把时间规律起来-睡眠保证下来-却次次熬夜。我想我是病了-不成熟的病-不自制的病-真是可悲-我像被自己挫败了-自己又嘲笑自己-然后自己在恶性循环中堕落。所以我决定-砍掉太多的想法-先把一件事做好。先把工作的事情完成。我要去好好钻研一下bs架构-学习一下spring的设计。计时-2days" tabindex="-1">我总结了一下最近一个半月，结果如下：想健身，买了瑜伽垫，却没有坚持。想做android，下了eclipse，很久也没打开过。一直在学习bs,但还是一个回路都打不通。准备9月份的纪念视频，却过了一个月都没有动vegas.想着咨询哥哥户口的事情，却没动身。想着帮大姐咨询艺术老师的事情，却没去问。水管一直坏掉，两周了还没有给房东打电话。我这是怎么了，我这是病了吗？我一直在想把时间规律起来，睡眠保证下来，却次次熬夜。我想我是病了，不成熟的病，不自制的病，真是可悲，我像被自己挫败了，自己又嘲笑自己，然后自己在恶性循环中堕落。所以我决定，砍掉太多的想法，先把一件事做好。先把工作的事情完成。我要去好好钻研一下BS架构，学习一下spring的设计。计时：2days. <a class="header-anchor" href="#我总结了一下最近一个半月-结果如下-想健身-买了瑜伽垫-却没有坚持。想做android-下了eclipse-很久也没打开过。一直在学习bs-但还是一个回路都打不通。准备9月份的纪念视频-却过了一个月都没有动vegas-想着咨询哥哥户口的事情-却没动身。想着帮大姐咨询艺术老师的事情-却没去问。水管一直坏掉-两周了还没有给房东打电话。我这是怎么了-我这是病了吗-我一直在想把时间规律起来-睡眠保证下来-却次次熬夜。我想我是病了-不成熟的病-不自制的病-真是可悲-我像被自己挫败了-自己又嘲笑自己-然后自己在恶性循环中堕落。所以我决定-砍掉太多的想法-先把一件事做好。先把工作的事情完成。我要去好好钻研一下bs架构-学习一下spring的设计。计时-2days" aria-label="Permalink to &quot;我总结了一下最近一个半月，结果如下：想健身，买了瑜伽垫，却没有坚持。想做android，下了eclipse，很久也没打开过。一直在学习bs,但还是一个回路都打不通。准备9月份的纪念视频，却过了一个月都没有动vegas.想着咨询哥哥户口的事情，却没动身。想着帮大姐咨询艺术老师的事情，却没去问。水管一直坏掉，两周了还没有给房东打电话。我这是怎么了，我这是病了吗？我一直在想把时间规律起来，睡眠保证下来，却次次熬夜。我想我是病了，不成熟的病，不自制的病，真是可悲，我像被自己挫败了，自己又嘲笑自己，然后自己在恶性循环中堕落。所以我决定，砍掉太多的想法，先把一件事做好。先把工作的事情完成。我要去好好钻研一下BS架构，学习一下spring的设计。计时：2days.&quot;">​</a></h2>',26)]))}const b=r(l,[["render",n]]);export{f as __pageData,b as default};
